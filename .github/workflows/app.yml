# .github/workflows/flutter.yml
name: Flutter CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test Flutter App
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Flutter (choose version that has Dart >=3.5.0)
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'   
          channel: stable

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run static analysis
      - name: Analyze code
        run: flutter analyze

      # Run tests
      - name: Run tests
        run: flutter test --coverage

      # Build Android APK (optional)
      - name: Build APK
        run: flutter build apk --release
        if: github.event_name != 'pull_request'

      # Upload artifact (APK)
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
        if: github.event_name != 'pull_request'


      # Create GitHub Release and upload APK (for public download link)
      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/dev' && github.event_name != 'pull_request'
        with:
          tag_name: latest
          release_name: Latest Build
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
